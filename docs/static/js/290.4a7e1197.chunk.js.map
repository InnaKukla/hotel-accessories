{"version":3,"file":"static/js/290.4a7e1197.chunk.js","mappings":"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","sources":["redux/products/products-selectors.js","components/Catalog/Catalog.jsx","pages/CatalogPage/CatalogPage.jsx"],"sourcesContent":["export const selectProducts = state => state.products.productsList;\nexport const selectOneProduct = state => state.products.oneProduct;\nexport const selectProductsTotal = state => state.products.total;\nexport const selectProductsTotalPages = state => state.products.totalPages;\nexport const selectCurrentPage = state => state.products.currentPage;\nexport const selectProductsLoading = state => state.products.isLoading;\n","import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useSearchParams } from \"react-router\";\n\nimport productsOperations from \"../../redux/products/products-operations\";\nimport {\n  selectCurrentPage,\n  selectProducts,\n  selectProductsLoading,\n  selectProductsTotalPages,\n} from \"../../redux/products/products-selectors\";\nimport {\n  CatalogSection,\n  CatalogWrapper,\n  CatalogHeader,\n  CatalogMainText,\n  CatalogLine,\n  CatalogAll,\n  CatalogFilterList,\n  CatalogFilterButton,\n  CatalogProductsList,\n  CatalogProductsItem,\n  CatalogProductsItemWrap,\n  CatalogProductsItemTextWrap,\n  CatalogProductsItemTextCode,\n  CatalogProductsItemTextName,\n  CatalogProductsItemTextPrice,\n  CatalogProductsBuyWrap,\n  CatalogProductsPagination,\n  ContainerCatalog,\n  CatalogProductsItemImg,\n  CatalogPaginationWrap,\n} from \"./Catalog.styled\";\n\nimport Trolley from \"../../assets/icons/trolley.svg\";\nimport { Link } from \"react-router\";\nimport Loader from \"../../shared/Loader/Loader\";\n\nimport cartOperations from \"../../redux/cart/cart-operations\";\n\nconst Catalog = () => {\n  const filterButtons = [\n    { id: \"towels\", label: \"towels\" },\n    { id: \"bedding\", label: \"bedding\" },\n    { id: \"household-linens\", label: \"household linens\" },\n  ];\n  const dispatch = useDispatch();\n  const loading = useSelector(selectProductsLoading);\n  const totalPages = useSelector(selectProductsTotalPages);\n  const currentPage = useSelector(selectCurrentPage);\n  const products = useSelector(selectProducts);\n  const [activeLink, setActiveLink] = useState(\"\");\n  const [page, setPage] = useState(currentPage || 1);\n  const [searchParams] = useSearchParams();\n  const category = searchParams.get(\"category\");\n\n  useEffect(() => {\n    const fetch = async () => {\n      if (category) {\n        setActiveLink(category);\n        const result = await dispatch(\n          productsOperations.fetchProductsByCategory(category)\n        );\n        const newPage = result.payload?.currentPage;\n\n        setPage(newPage);\n      } else {\n        handleAllProducts();\n        setActiveLink(\"\");\n      }\n    };\n    fetch();\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [page, activeLink, category]);\n\n  const handleAllProducts = async () => {\n    searchParams.delete(\"category\");\n    setActiveLink(\"\");\n    await dispatch(\n      productsOperations.fetchAllProducts({\n        page,\n      })\n    );\n  };\n\n  const handleChangePage = (e, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleFilter = async (category) => {\n    if (filterButtons.some((button) => button.id === category)) {\n      setActiveLink(category);\n      searchParams.set(\"category\", category);\n    }\n    await dispatch(productsOperations.fetchProductsByCategory(category));\n  };\n\n  const handleAddToCart = async (id) => {\n    await dispatch(\n      cartOperations.addCartProduct({ productId: id, quantity: 1 })\n    );\n  };\n\n  return (\n    <>\n      {loading ? (\n        <Loader />\n      ) : (\n        <CatalogSection>\n          <ContainerCatalog>\n            <CatalogWrapper>\n              <CatalogHeader>\n                <CatalogMainText\n                  onClick={handleAllProducts}\n                  style={{ cursor: \"pointer\" }}\n                >\n                  catalog\n                </CatalogMainText>\n                <CatalogFilterList>\n                  {filterButtons.map((button) => (\n                    <CatalogFilterButton\n                      key={button.id}\n                      onClick={() => handleFilter(button.id)}\n                      style={{\n                        textDecoration:\n                          activeLink === button.id ? \"underline\" : \"none\",\n                      }}\n                    >\n                      {button.label}\n                    </CatalogFilterButton>\n                  ))}\n                </CatalogFilterList>\n              </CatalogHeader>\n              <CatalogLine />\n\n              {/* <CatalogAll> */}\n              <CatalogProductsList>\n                {products && products.length > 0 ? (\n                  products.map((item) => (\n                    <CatalogProductsItem key={item._id}>\n                      <Link\n                        to={`/products/${item._id}`}\n                        style={{ display: \"flex\" }}\n                        state={{ id: item._id }}\n                      >\n                        <CatalogProductsItemImg\n                          src={item.image}\n                          alt={item.name}\n                          loading=\"lazy\"\n                        />\n                      </Link>\n                      <CatalogProductsItemWrap>\n                        <Link\n                          to={`/products/${item._id}`}\n                          style={{ marginLeft: \"5px\", marginTop: \"5px\" }}\n                        >\n                          <CatalogProductsItemTextWrap>\n                            <CatalogProductsItemTextCode>\n                              {item.category}\n                            </CatalogProductsItemTextCode>\n                            <CatalogProductsItemTextName>\n                              {item.name}\n                            </CatalogProductsItemTextName>\n                            <CatalogProductsItemTextPrice>\n                              {item.price}\n                            </CatalogProductsItemTextPrice>\n                          </CatalogProductsItemTextWrap>\n                        </Link>\n                        <Link to=\"/basket\" state={{ id: item._id }}>\n                          <CatalogProductsBuyWrap\n                            onClick={() => handleAddToCart(item._id)}\n                          >\n                            <img src={Trolley} alt=\"Trolley\" loading=\"lazy\" />\n                          </CatalogProductsBuyWrap>\n                        </Link>\n                      </CatalogProductsItemWrap>\n                    </CatalogProductsItem>\n                  ))\n                ) : (\n                  <div style={{ width: \"1440px\" }}>\n                    <p>No products found for this category</p>\n                  </div>\n                )}\n              </CatalogProductsList>\n              {/* </CatalogAll> */}\n            </CatalogWrapper>\n            {products && products.length > 0 && (\n              <CatalogPaginationWrap>\n                <CatalogProductsPagination\n                  sx={{ margin: \"auto\" }}\n                  count={totalPages || 0}\n                  page={page}\n                  onChange={handleChangePage}\n                />\n              </CatalogPaginationWrap>\n            )}\n          </ContainerCatalog>\n        </CatalogSection>\n      )}\n    </>\n  );\n};\n\nexport default Catalog;\n","import React from 'react'\nimport Catalog from '../../components/Catalog/Catalog'\n\nconst CatalogPage = () => {\n  return (\n    <div>\n      <Catalog/>\n    </div>\n  )\n}\n\nexport default CatalogPage\n"],"names":["selectProducts","state","products","productsList","selectOneProduct","oneProduct","selectProductsTotalPages","totalPages","selectCurrentPage","currentPage","selectProductsLoading","isLoading","Catalog","filterButtons","id","label","dispatch","useDispatch","loading","useSelector","activeLink","setActiveLink","useState","page","setPage","searchParams","useSearchParams","category","get","useEffect","async","_result$payload","newPage","productsOperations","fetchProductsByCategory","payload","handleAllProducts","fetch","window","scrollTo","top","behavior","delete","fetchAllProducts","_jsx","_Fragment","children","Loader","CatalogSection","_jsxs","ContainerCatalog","CatalogWrapper","CatalogHeader","CatalogMainText","onClick","style","cursor","CatalogFilterList","map","button","CatalogFilterButton","some","set","handleFilter","textDecoration","CatalogLine","CatalogProductsList","length","item","CatalogProductsItem","Link","to","_id","display","CatalogProductsItemImg","src","image","alt","name","CatalogProductsItemWrap","marginLeft","marginTop","CatalogProductsItemTextWrap","CatalogProductsItemTextCode","CatalogProductsItemTextName","CatalogProductsItemTextPrice","price","CatalogProductsBuyWrap","cartOperations","addCartProduct","productId","quantity","handleAddToCart","Trolley","width","CatalogPaginationWrap","CatalogProductsPagination","sx","margin","count","onChange","handleChangePage","e","CatalogPage"],"sourceRoot":""}